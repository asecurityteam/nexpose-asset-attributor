// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/domain/validator.go

// Package v1 is a generated GoMock package.
package v1

import (
	context "context"
	domain "github.com/asecurityteam/nexpose-asset-attributor/pkg/domain"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockAssetValidator is a mock of AssetValidator interface
type MockAssetValidator struct {
	ctrl     *gomock.Controller
	recorder *MockAssetValidatorMockRecorder
}

// MockAssetValidatorMockRecorder is the mock recorder for MockAssetValidator
type MockAssetValidatorMockRecorder struct {
	mock *MockAssetValidator
}

// NewMockAssetValidator creates a new mock instance
func NewMockAssetValidator(ctrl *gomock.Controller) *MockAssetValidator {
	mock := &MockAssetValidator{ctrl: ctrl}
	mock.recorder = &MockAssetValidatorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAssetValidator) EXPECT() *MockAssetValidatorMockRecorder {
	return m.recorder
}

// Validate mocks base method
func (m *MockAssetValidator) Validate(ctx context.Context, attributedAsset domain.NexposeAttributedAssetVulnerabilities) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Validate", ctx, attributedAsset)
	ret0, _ := ret[0].(error)
	return ret0
}

// Validate indicates an expected call of Validate
func (mr *MockAssetValidatorMockRecorder) Validate(ctx, attributedAsset interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Validate", reflect.TypeOf((*MockAssetValidator)(nil).Validate), ctx, attributedAsset)
}
