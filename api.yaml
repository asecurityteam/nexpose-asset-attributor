openapi: 3.0.0
x-runtime:
  httpserver:
    address: ":8080"
  logger:
    level: "INFO"
    output: "STDOUT"
  stats:
    output: "NULL"
    datadog:
      address: "statsd:8125"
      flushinterval: "10s"
  signals:
    installed:
      - "OS"
    os:
      signals:
        - 2 # SIGINT
        - 15 # SIGTERM
  connstate:
    reportinterval: "5s"
    hijackedcounter: "http.server.connstate.hijacked"
    closedcounter: "http.server.connstate.closed"
    idlegauge: "http.server.connstate.idle.gauge"
    idlecounter: "http.server.connstate.idle"
    activegauge: "http.server.connstate.active.gauge"
    activecounter: "http.server.connstate.active"
    newgauge: "http.server.connstate.new.gauge"
    newcounter: "http.server.connstate.new"
x-transportd:
  backends:
    - app
  app:
    host: "http://app:8081"
    pool:
      ttl: "24h"
      count: 1
info:
  version: 1.0.0
  title: "nexpose-asset-attributor"
  description: "Attribute Assets from Nexpose to Teams and People"
  contact:
    name: Security Development
    email: secdev-external@atlassian.com
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /healthcheck:
    get:
      description: "Liveness check."
      responses:
        "200":
          description: "Success."
      x-transportd:
        backend: app
  /attribute:
    post:
      description: Accepts a Nexpose asset payload with Nexpose vulnerabilities and returns the asset payload annotated with the business context associated with the asset at the time it was scanned by Nexpose.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetWithVulnerabilities'
      responses:
        "200":
          description: "Success"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetWithVulnerabilitiesAndBusinessContext'
        "400":
            description: "Invalid input"
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
        "404":
            description: "Not found"
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
      x-transportd:
        backend: app
        enabled:
          - "metrics"
          - "accesslog"
          - "requestvalidation"
          - "responsevalidation"
          - "lambda"
        lambda:
          arn: "attribute"
          async: false
          request: '#! json .Request.Body !#'
          success: '{"status": 200, "bodyPassthrough": true}'
          error: >
            {
              "status":
              #! if eq .Response.Body.errorType "AssetNotFoundError" !# 404,
              #! else if eq .Response.Body.errorType "AssetInventoryRequestError" !# 502,
              #! else !# 500,
              #! end !#
              "body": {
                #! if eq .Response.Body.errorType "AssetNotFoundError" !#
                "code": 404, "status": "Not Found",
                #! else if eq .Response.Body.errorType "AssetInventoryRequestError" !#
                "code": 502, "status": "Bad Gateway",
                #! else !#
                "code": 500, "status": "Internal Server Error",
                #! end !#
                "reason": "#!.Response.Body.errorMessage!#"
              }
            }
components:
  schemas:
    Error:
      type: object
      properties:
        status:
          type: string
          description: HTTP status message
        code:
          type: integer
          description: HTTP status code
        reason:
          type: string
          description: Detailed information about the error
    AssetWithVulnerabilities:
      type: object
      required:
        - id
        - ip
        - lastScanned
        - assetVulnerabilityDetails
      properties:
        hostname:
          type: string
          example: corporate-workstation-1102DC.acme.com
          description: The primary host name (local or FQDN) of the asset.
        id:
          type: integer
          format: int64
          example: 282
          description: The identifier of the asset.
        ip:
          type: string
          example: 182.34.74.202
          description: The primary IPv4 or IPv6 address of the asset.
        lastScanned:
          type: string
          format: date-time
          description: The last time the asset was scanned.
        assetVulnerabilityDetails:
          type: array
          description: List of vulnerabilities found on the asset.
          items:
            $ref: '#/components/schemas/AssetVulnerabilityDetails'
    AssetVulnerabilityDetails:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          example: ssh-openssh-x11uselocalhost-x11-forwarding-session-hijack
          description: The identifier of the vulnerability.
        results:
          type: array
          description: >-
            The vulnerability check results for the finding. Multiple instances
            may be present if one or more checks fired, or a check has multiple
            independent results.
          items:
            $ref: '#/components/schemas/AssessmentResult'
        cvssV2Score:
          type: number
          format: double
          example: 4.4
          description: 'The CVSS V2 score, which ranges from 0-10.'
        cvssV2Severity:
          type: string
          example: Severe
          description: >-
            The severity of the vulnerability, one of: `"Moderate"`, `"Severe"`,
            `"Critical"`.
        description:
          type: string
          example: >-
            <p>A remote code execution vulnerability exists in the way that the
            scripting engine handles objects in memory in Microsoft Edge. ...</p>
          description: The description of the vulnerability.
        title:
          type: string
          example: >-
            Microsoft CVE-2017-11804: Scripting Engine Memory Corruption
            Vulnerability
          description: The title (summary) of the vulnerability.
        solutions:
          type: array
          items:
            type: string
          description: Solutions for remediation of the vulnerability.
    AssessmentResult:
      type: object
      required:
        - port
        - protocol
      properties:
        port:
          type: integer
          format: int32
          example: 22
          description: The port of the service the result was discovered on.
        protocol:
          type: string
          example: tcp
          description: The protocol of the service the result was discovered on.
          enum:
            - ip
            - icmp
            - igmp
            - ggp
            - tcp
            - pup
            - udp
            - idp
            - esp
            - nd
            - raw
    BusinessContext:
      type: object
      description: The "real world" aspects of the asset helpful for assigning remediations to teams and people.
      properties:
        privateIPAddresses:
          type: array
          description: All private IP addresses attached to the asset.
          items:
            type: string
        publicIPAddresses:
          type: array
          description: All public IP addresses attached to the asset.
          items:
            type: string
        hostnames:
          type: array
          description: All hostnames attached to the asset.
          items:
            type: string
        resourceType:
          type: string
          description: The type of device.
          example: "ec2:instance"
        accountID:
          type: string
          description: Account ID associated with the asset, if applicable.
          example: "8675309"
        region:
          type: string
          description: Region where the asset is deployed.
          example: "us-west"
        resourceID:
          type: string
          description: Identifier for this asset that may be different from its Nexpose identified.
          example: "arn:aws:a4b:us-east-1:123456789012:room/7315ffdf0eeb874dc4ab8a546e8b70ec/5f90e5d608b6baa9c88db56654aef158"
        tags:
          type: object
          description: Freeform tags attached to the asset in an asset inventory system
          additionalProperties:
            type: string
          example:
            resource_owner: "service_owner@example.com"
            business_unit: "Acme Product Team"
            service_name: "example_service"
    AssetWithVulnerabilitiesAndBusinessContext:
      type: object
      required:
        - id
        - ip
        - lastScanned
        - assetVulnerabilityDetails
      properties:
        hostname:
          type: string
          example: corporate-workstation-1102DC.acme.com
          description: The primary host name (local or FQDN) of the asset.
        id:
          type: integer
          format: int64
          example: 282
          description: The identifier of the asset.
        ip:
          type: string
          example: 182.34.74.202
          description: The primary IPv4 or IPv6 address of the asset.
        lastScanned:
          type: string
          format: date-time
          description: The last time the asset was scanned.
        assetVulnerabilityDetails:
          type: array
          description: List of vulnerabilities found on the asset.
          items:
            $ref: '#/components/schemas/AssetVulnerabilityDetails'
        businessContext:
          $ref: '#/components/schemas/BusinessContext'
